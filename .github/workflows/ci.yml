name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Unit Tests
  backend-tests:
    name: Backend Unit Tests (Jest)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Jest tests with coverage
        run: npm test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: success()
        with:
          files: ./coverage/lcov.info
          flags: backend
          name: backend-coverage
        continue-on-error: true

  # Frontend E2E Tests
  frontend-tests:
    name: Frontend E2E Tests (Cucumber)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Chromium dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnss3 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxkbcommon0 \
            libgbm1 \
            libasound2

      - name: Start application
        run: |
          npm start &
          echo $! > server.pid
          sleep 5

      - name: Wait for application to be ready
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 1; done'

      - name: Run Cucumber tests
        run: npm run test:cucumber

      - name: Stop application
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

      - name: Upload Cucumber report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cucumber-report
          path: cucumber-report.html

  # Linting and Code Quality
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=high
        continue-on-error: true

  # Build validation
  build:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Verify application starts
        run: |
          timeout 10 npm start &
          sleep 3
          curl -f http://localhost:3000 || exit 1

  # Summary job
  ci-success:
    name: CI Pipeline Success
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, code-quality, build]
    if: success()

    steps:
      - name: Success
        run: |
          echo "✅ All CI checks passed!"
          echo "Backend tests: ✓"
          echo "Frontend tests: ✓"
          echo "Code quality: ✓"
          echo "Build validation: ✓"
